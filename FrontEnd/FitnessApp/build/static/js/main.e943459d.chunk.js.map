{"version":3,"sources":["models/workoutPlan.js","containers/workoutForm.jsx","models/users.js","containers/fitnessTab.jsx","models/food.js","containers/dietForm.jsx","containers/dietTab.jsx","containers/socialList.jsx","containers/homeFeed.jsx","containers/Home.js","containers/Login.js","components/AppliedRoute.js","containers/NotFound.js","routes.js","App.js","serviceWorker.js","config.js","index.js"],"names":["WorkoutPlan","name","type","calories","setTime","comment","date","Object","classCallCheck","this","WorkoutForm","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","onPlanAdded","Date","setState","_this2","react_default","a","createElement","Fragment","className","method","onSubmit","class","htmlFor","id","onChange","e","target","rows","onClick","React","Component","Users","userName","profilePic","age","height","weight","workoutplans","fitnessGoals","spotters","FitnessTab","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","fitnessGoal","push","workoutPlan","Tabs","defaultActiveKey","Tab","eventKey","title","workoutForm_WorkoutForm","x","Food","details","DietForm","onFoodAdded","DietTab","diet","dietGoals","aria-label","href","aria-current","dietForm_DietForm","SocialList","map","s","i","w","HomeFeed","socialList_SocialList","Home","Login","handleChange","event","defineProperty","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","Auth","signIn","email","password","userHasAuthenticated","t0","alert","message","stop","_x","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","Button","block","disabled","validateForm","AppliedRoute","C","component","cProps","rest","objectWithoutProperties","Route","assign","render","containers_NotFound","routes","childProps","Switch","path","exact","NotFound","App","authenticated","isAuthenticated","handleLogout","Navbar","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","Nav","pullRight","NavItem","react","react_router_bootstrap_lib","homeFeed_HomeFeed","fitnessTab_FitnessTab","dietTab_DietTab","Boolean","window","location","hostname","match","config","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","API","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e943459d.chunk.js","sourcesContent":["export class WorkoutPlan {\n    constructor(name, type, calories, setTime, comment, date) {\n        this.name = name;\n        this.type = type;\n        this.calories = calories;\n        this.setTime = setTime;\n        this.comment = comment;       \n        this.date = date;\n    }\n}\nexport default WorkoutPlan; ","import React, { Component } from 'react';\nimport { Button} from 'react-bootstrap';\nimport {Form} from 'react-bootstrap';\nimport { WorkoutPlan } from '../models/workoutPlan';\n\nexport class WorkoutForm extends React.Component {\n    constructor(props){\n           super(props)\n           this.state = {\n             name: '',\n             type: '',\n             calories: '',\n             setTime: '',\n             comment: ''\n           }\n         }\n\n    \n        onSubmit() {\n            this.props.onPlanAdded(new WorkoutPlan(this.state.name, this.state.type, this.state.calories, this.state.setTime, this.state.comment, new Date()));\n            this.setState({\n                name: '',\n                type: '',\n                calories: '',\n                setTime: '',\n                comment: ''\n            });\n        }\n    \n        render() {\n            return (\n                \n\n<>\n                <div className=\"card\">\n               <div className=\"card-header\"><h1>Create your workout plan!</h1></div>\n                   <div className=\"card-body\">\n                <form method=\"post\" onSubmit={this.onPlanAdded}>\n                    <div class = \"form-row\">\n                    \n                    <div class = \"col\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">workout name</label>\n                        <input type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            className=\"form-control\"\n                            value={this.state.name}\n                            onChange={e => this.setState({ name: e.target.value })} />\n                    </div>\n                    </div>\n\n                    <div class = \"col\">\n                    <div className=\"form-group mx-sm-3 mb-2\">\n                        <label htmlFor=\"type\">Type</label>\n                        <select id=\"Type\"\n                            name=\"type\"\n                            className=\"form-control\"\n                            value={this.state.type}\n                            onChange={e => this.setState({ type: e.target.value })} >\n                            <option></option>\n                            <option>Cardiovascular</option>\n                            <option>Anaerobic</option>\n                            <option>Flexibility</option>\n                            <option>Muscular strenght</option>\n                            <option>Muscular endurance</option>\n                            </select>\n                    </div>\n                    </div>\n                    </div>\n                    <div class = \"form-row\">\n                    <div class = \"col\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"calories\">calories</label>\n                        <input type=\"text\"\n                            id=\"calories\"\n                            name=\"calories\"\n                            className=\"form-control\"\n                            value={this.state.calories}\n                            onChange={e => this.setState({ calories: e.target.value })} />\n                    </div>\n                    </div>\n\n                    <div class = \"col\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"setTime\">How long?</label>\n                        <input type=\"text\"\n                            id=\"setTime\"\n                            name=\"setTime\"\n                            className=\"form-control\"\n                            value={this.state.setTime}\n                            onChange={e => this.setState({ setTime: e.target.value })} />\n                    </div>\n                    </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"comment\">Comment</label>\n                        <textarea rows=\"3\"\n                            id=\"comment\"\n                            name=\"comment\"\n                            className=\"form-control\"\n                            value={this.state.comment}\n                            onChange={e => this.setState({ comment: e.target.value })} />\n                    </div>\n\n                </form>\n                <div>\n                    <button onClick={e => this.onSubmit()}\n                            className=\"btn btn-primary\">\n                        Submit\n                    </button>\n                </div>\n                </div>\n                </div>\n\n                    \n                  \n                </>\n            );\n        }\n    }\n    \n    export default WorkoutForm;","export class Users {\n    constructor(id,userName, profilePic, age, height, weight, workoutplans, fitnessGoals, spotters) {\n        this.id=id;\n        this.userName = userName;\n        this.profilePic = profilePic;\n        this.age = age;\n        this.height = height;\n        this.weight = weight;\n        this.workoutplans = workoutplans;\n        this.fitnessGoals = fitnessGoals;\n        this.spotters = spotters;\n    }\n}\nexport default Users;","import React, { Component } from 'react';\nimport {WorkoutForm} from './workoutForm';\nimport {WorkoutPlan} from '../models/workoutPlan';\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport {Users} from '../models/users';\n\n\nexport class FitnessTab extends React.Component {\n  \n    Users = [\n        new Users(\n            \"Benny\",\n            \"link\",\n            20,\n            5.9,\n            175,\n            [],\n            [],\n            []\n        )\n    ];\n\n    \n        state = {\n            userName: '',\n            profilePic: '',\n            age: '',\n            height: 0,\n            weight: '',\n            workoutplans: [],\n            fitnessGoals: [],\n            spotters: []\n        };\n      \n\n        onGoalAdded(fitnessGoal){\n            this.setState(state =>{\n                state.fitnessGoals.push(fitnessGoal);\n                return state;\n            })\n        }\n \n\n    onPlanAdded(workoutPlan){\n        this.setState(state =>{\n            state.workoutplans.push(workoutPlan);\n            return state;\n        })\n    }\n\n    render() {\n        return (\n            <>\n            <Tabs defaultActiveKey=\"workoutplan\" id=\"uncontrolled-tab-example\">\n  <Tab eventKey=\"workoutplan\" title=\"Workout Plan\">\n  <WorkoutForm onPlanAdded ={x=> this.onPlanAdded(x)}/>\n  </Tab>\n  <Tab eventKey=\"goals\" title=\"Fitness Goals\">\n  <div><h1>WIP</h1></div>\n  </Tab>\n  </Tabs>\n    \n            </>\n        );\n    }\n\n\n}\n\nexport default FitnessTab;","export class Food {\n    constructor(name,type, calories,date,details) {\nthis.name=name;\nthis.type=type;\nthis.calories = calories;\nthis.date=date;\nthis.details = details;\n    }\n}\nexport default Food;","import React, { Component } from 'react';\nimport { Food } from '../models/food';\n\n\nexport class DietForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            type: 0,\n            calories: '',\n            details: ''\n        }\n    }\n\n    onSubmit() {\n        this.props.onFoodAdded(new Food(this.state.name, this.state.type, this.state.calories, new Date(), this.state.details));\n        this.setState({\n            name: '',\n            type: 0,\n            calories: '',\n            details: ''\n        });\n    }\n\n    render() {\n        return (\n            <>\n                \n                \n                <div className=\"card\">\n               <div className=\"card-header\"><h1>Create your diet plan!</h1></div>\n                   <div className=\"card-body\">\n                <form method=\"post\" onSubmit={this.onPlanAdded}>\n                    <div class = \"form-row\">\n                    \n                    <div class = \"col\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Food</label>\n                        <input type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            className=\"form-control\"\n                            value={this.state.name}\n                            onChange={e => this.setState({ name: e.target.value })} />\n                    </div>\n                    </div>\n\n                    <div class = \"col\">\n                    <div className=\"form-group mx-sm-3 mb-2\">\n                        <label htmlFor=\"type\">Type</label>\n                        <select id=\"Type\"\n                            name=\"type\"\n                            className=\"form-control\"\n                            value={this.state.type}\n                            onChange={e => this.setState({ type: e.target.value })} >\n                            <option></option>\n                            <option>Grain</option>\n                            <option>Fruit</option>\n                            <option>Vegetable</option>\n                            <option>Meat</option>\n                            <option>Sweets</option>\n                            <option>Junk Food</option>\n                            </select>\n                    </div>\n                    </div>\n                    </div>\n                    <div class = \"form-row\">\n                    <div class = \"col\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"calories\">calories</label>\n                        <input type=\"text\"\n                            id=\"calories\"\n                            name=\"calories\"\n                            className=\"form-control\"\n                            value={this.state.calories}\n                            onChange={e => this.setState({ calories: e.target.value })} />\n                    </div>\n                    </div>\n\n                   \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"details\">details</label>\n                        <textarea rows=\"3\"\n                            id=\"details\"\n                            name=\"details\"\n                            className=\"form-control\"\n                            value={this.state.details}\n                            onChange={e => this.setState({ details: e.target.value })} />\n                    </div>\n\n                </form>\n                <div>\n                    <button onClick={e => this.onSubmit()}\n                            className=\"btn btn-primary\">\n                        Submit\n                    </button>\n                </div>\n                </div>\n                </div>\n                </>\n        );\n    }\n}\n\nexport default DietForm;\n\n","import React, { Component } from 'react';\nimport { DietForm } from './dietForm';\nimport { Food } from '../models/food';\nimport { Users } from '../models/users';\n\n\nexport class DietTab extends React.Component {\n\n    state = {\n        userName: '',\n        profilePic: '',\n        diet: [],\n        dietGoals: []\n    };\n\n    onFoodAdded(Food) {\n        this.setState(state => {\n            state.diet.push(Food);\n            return state;\n        })\n    }\n\n    nav_link() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Diet</a></li>\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">{this.state.userName}</li>\n                </ol>\n            </nav>\n        )\n    }\n/*\n    jumbo() {\n        return (\n            <div class=\"jumbotron\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-offset-2 col-xs-8\">\n                            <div>\n                                <img src={\"http://johnlawrimore.com/smu/\" + this.state.imageName} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <ReviewList reviews={this.state.reviews} />\n                <ReviewForm addReview={review => this.addReview(review)} />\n            </div>\n        )\n    }\n*/\n    render() {\n        return (\n            <>\n                <DietForm onFoodAdded={x => this.onFoodAdded(x)} />\n            </>\n        );\n    }\n\n\n}\n\nexport default DietTab;\n\n","import React from 'react';\n\nexport const SocialList = (props) => (\n    <div>\n        <header>\n            <h1>My Feed </h1>\n            {!props.spotters.length && <div className= \"alert alert-primary\">\n                    Add some Spotters to follow!\n                </div>\n            }\n        </header>\n        {\n            props.spotters.map((s,i) =>{\n                return (\n                    \n                <div key = {i} class=\"card\" >\n                <div class=\"card-header\">\n                {s.userName}\n                </div>\n                {\n                s.workoutplans.map((w,i) =>{\n                    return(\n                <div key = {i} class=\"card-body\">\n                    <h5 class=\"card-title\"></h5>\n                    <p class=\"card-text\">{w.name}</p>\n                    <p class=\"card-text\">{w.type}</p>\n                    <p class=\"card-text\">{w.calories}</p>\n                    <p class=\"card-text\">{w.setTime}</p>\n                    <p class=\"card-text\">{w.date}</p>\n                </div>\n                    )\n                }\n                )\n                }\n                </div> \n                )\n            }\n            )\n        }\n    </div>\n);\n\nexport default SocialList;","import React, { Component } from 'react';\nimport {SocialList } from './socialList';\nimport {WorkoutForm} from './workoutForm';\nimport {Users} from '../models/users';\n\nexport class HomeFeed extends React.Component {\n    Users = [\n        new Users(\n            \"Benny\",\n            \"link\",\n            20,\n            5.9,\n            175,\n            [],\n            [],\n            []\n        )\n    ];\n\n    \n        state = {\n            userName: '',\n            profilePic: '',\n            age: '',\n            height: 0,\n            weight: '',\n            workoutplans: [],\n            fitnessGoals: [],\n            spotters: []\n        };\n\n        onPlanAdded(workoutPlan){\n            this.setState(state =>{\n                state.workoutplans.push(workoutPlan);\n                return state;\n            })\n        }\n   render(){\n       return(\n<div>\n<SocialList spotters = {this.state.spotters} />\n\n<WorkoutForm onPlanAdded ={x=> this.onPlanAdded(x)}/>\n\n</div>\n\n);\n\n} \n\n\n}\n\nexport default HomeFeed;","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"lander\">\r\n          <h1>Peachy</h1>\r\n          <p>GUI/DB Fitness App</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { Auth } from \"aws-amplify\";\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n    //should have more security-related input validation, but more on this later ;)\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n      \n        try {\n          await Auth.signIn(this.state.email, this.state.password);\n          this.props.userHasAuthenticated(true);\n        } catch (e) {\n          alert(e.message);\n        }\n    }\n      \n\n  render() {\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;\r\n/*\r\nThis simple component creates a Route where the child component that it renders contains the passed in props. Let’s take a quick look at how this being done.\r\n\r\nThe Route component takes a prop called component that represents the component that will be rendered when a matching route is found. We want our childProps to be sent to this component.\r\n\r\nThe Route component can also take a render method in place of the component. This allows us to control what is passed in to our component.\r\n\r\nBased on this we can create a component that returns a Route and takes a component and childProps prop. This allows us to pass in the component we want rendered and the props that we want applied.\r\n\r\nFinally, we take component (set as C) and props (set as cProps) and render inside our Route using the inline function; props => <C {...props} {...cProps} />. Note, the props variable in this case is what the Route component passes us. Whereas, the cProps is the childProps that we want to set.\r\n*/","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, page not found!</h3>\r\n  </div>;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport AppliedRoute from \"./components/AppliedRoute\";\n\nimport NotFound from \"./containers/NotFound\";\n\nexport default ({ childProps }) =>\n  <Switch>\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\n    <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\n    { /* Finally, catch all unmatched routes */ }\n    <Route component={NotFound} />\n  </Switch>;\n\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {FitnessTab} from './containers/fitnessTab';\nimport {DietTab} from './containers/dietTab';\nimport {HomeFeed} from './containers/homeFeed';\nimport { Nav, Navbar, NavItem, Tab, Tabs } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./routes\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      isAuthenticated: false\n    };\n  }\n  \n  \n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n  \n  handleLogout = event => {\n    this.userHasAuthenticated(false);\n  }\n  \n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n    \n    return (\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Peachy Fitness</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n                {this.state.isAuthenticated\n                  ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                  : <Fragment>\n                      <LinkContainer to=\"/signup\">\n                        <NavItem>Signup</NavItem>\n                      </LinkContainer>\n                      <LinkContainer to=\"/login\">\n                        <NavItem>Login</NavItem>\n                      </LinkContainer>\n                    </Fragment>\n                }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        \n        <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n  <Tab eventKey=\"home\" title=\"Home\">\n  <HomeFeed/>\n  </Tab>\n  <Tab eventKey=\"fitness\" title=\"Fitness\">\n  <FitnessTab />\n  </Tab>\n  <Tab eventKey=\"diet\" title=\"Diet\">\n  <DietTab />\n  </Tab>\n\n  <Tab eventKey=\"personal\" title=\"Personal\">\n    <div><h1>Peachy</h1></div>\n  </Tab>\n  <Tab eventKey=\"account\" title=\"Account\">\n    <div><h1>Peachy</h1></div>\n  </Tab>\n</Tabs>\n\n        \n        <Routes childProps={childProps} />\n        </div>\n    );\n  }\n  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n    s3: {\r\n      REGION: \"YOUR_S3_UPLOADS_BUCKET_REGION\",\r\n      BUCKET: \"YOUR_S3_UPLOADS_BUCKET_NAME\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"YOUR_API_GATEWAY_REGION\",\r\n      URL: \"YOUR_API_GATEWAY_URL\"\r\n    },\r\n    cognito: {\r\n      REGION: \"YOUR_COGNITO_REGION\",\r\n      USER_POOL_ID: \"YOUR_COGNITO_USER_POOL_ID\",\r\n      APP_CLIENT_ID: \"YOUR_COGNITO_APP_CLIENT_ID\",\r\n      IDENTITY_POOL_ID: \"YOUR_IDENTITY_POOL_ID\"\r\n    }\r\n  };\r\n  /*\r\n\r\nYOUR_S3_UPLOADS_BUCKET_NAME and YOUR_S3_UPLOADS_BUCKET_REGION with the your S3 Bucket name and region from the Create an S3 bucket for file uploads chapter. In our case it is notes-app-uploads and us-east-1.\r\n\r\nYOUR_API_GATEWAY_URL and YOUR_API_GATEWAY_REGION with the ones from the Deploy the APIs chapter. In our case the URL is https://ly55wbovq4.execute-api.us-east-1.amazonaws.com/prod and the region is us-east-1.\r\n\r\nYOUR_COGNITO_USER_POOL_ID, YOUR_COGNITO_APP_CLIENT_ID, and YOUR_COGNITO_REGION with the Cognito Pool Id, App Client id, and region from the Create a Cognito user pool chapter.\r\n\r\nYOUR_IDENTITY_POOL_ID with your Identity pool ID from the Create a Cognito identity pool chapter.\r\n\r\n\r\n\r\n  */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\n\n\n//initialize AWS Amplify\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      identityPoolId: config.cognito.IDENTITY_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      region: config.s3.REGION,\n      bucket: config.s3.BUCKET,\n      identityPoolId: config.cognito.IDENTITY_POOL_ID\n    },\n    API: {\n      endpoints: [\n        {\n          name: \"notes\",\n          endpoint: config.apiGateway.URL,\n          region: config.apiGateway.REGION\n        },\n      ]\n    }\n  });\n  /*\nAmplify refers to Cognito as Auth, S3 as Storage, and API Gateway as API.\n\nThe mandatorySignIn flag for Auth is set to true because we want our users to be signed in before they can interact with our app.\n\nThe name: \"notes\" is basically telling Amplify that we want to name our API. Amplify allows you to add multiple APIs that your app is going to work with. In our case our entire backend is just one single API.\n\nThe Amplify.configure() is just setting the various AWS resources that we want to interact with. It isn’t doing anything else special here beside configuration. So while this might look intimidating, just remember this is only setting things up.\n  */\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById(\"root\")\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}